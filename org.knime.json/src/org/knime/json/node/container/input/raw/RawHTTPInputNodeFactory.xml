<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./raw-in.png" type="Container" xmlns="http://knime.org/node/v4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Container Input (Raw HTTP)</name>

	<shortDescription>
		Reads the body, headers, and the query string from an HTTP request calling the workflow
		and outputs it in 3 different tables.
	</shortDescription>

	<fullDescription>
		<intro>
			<p>
				When an external caller executes the workflow with this node via an HTTP call to the KNIME Server / Hub REST API,
				the HTTP body, headers, and query parameters are captured and exposed as tables.
				The body is outputted in binary, whereas the header and parameter tables are outputted as data tables.
			</p>
			<p>
				This node works only with the <tt>raw-execution</tt> endpoint of the KNIME Server / Hub REST API.
				To learn more, check out the
				<a href="https://api.hub.knime.com/api-doc/?service=execution-service#/Jobs/post_raw_execution">Hub API
				documentation</a> or the API documentation of your KNIME Server.
			</p>
			<p>
				Other container input nodes rely on body data to be provided in a JSON format.
				However, this "Raw HTTP Input Container" node can deal with arbitrary data, which is provided to the workflow as-is in a binary format.
				Therefore, the user is able to also input non-standard data, like for example an Excel spreadsheet (*.xlsx files).
				Furthermore, because of the removed format constraint, this input container allows for an extended compatibility with external tools.
			</p>
			<p>
				Important: There can only be one "Container Input (Raw HTTP)" node in a workflow, as it captures the raw request.
				Additionally, this input node is only compatible with the "Container Output (Raw HTTP)" node.
				This means, no other container output node will be supported with this raw HTTP input container.
			</p>
		</intro>

		<option name="File for response body">
			File chooser for selecting a file containing the body. Four different locations can be chosen from:
			Local File System, Relative to, Mountpoint and Custom URL.
			This default body is then returned while building the workflow when no actual request is available.
		</option>
		
		<option name="Default headers">
			The default headers to return while building the workflow when no actual request is available.
		</option>
		
		<option name="Default query parameters">
			The default query parameters to return while building the workflow when no actual request is available.
		</option>
	</fullDescription>

	<ports>
		<dynInPort insert-before="0" name="File system connection" group-identifier="File System Connection">
			The file system connection for retrieving the body file.
		</dynInPort>
		<outPort index="0" name="Binary data">
			Table containing a single binary body value in the column <tt>body</tt>.
		</outPort>
		<outPort index="1" name="Headers">
			Table containing one column for each header. There is a single row containing the header's value.
		</outPort>
		<outPort index="2" name="Query Parameters">
			Table containing one column for each query parameter. There is a single row containing the header's value.
		</outPort>
	</ports>
</knimeNode>
