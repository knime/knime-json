<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?eclipse version="3.4"?><plugin>

   <!-- This is an example for providing an own category--> 
      <extension point="org.knime.workbench.repository.categories">
      <category description="Category containing my nodes" icon="icons/16x16/category_json.png" level-id="json" name="JSON" path="/struct-data"/>
   </extension>

   <extension point="org.knime.workbench.repository.nodes">
      <node category-path="/struct-data/json" deprecated="true" factory-class="org.knime.json.node.reader.JSONReaderNodeFactory"/>
      <node category-path="/struct-data/json" deprecated="true" factory-class="org.knime.json.node.writer.JSONWriterNodeFactory"/>
      <node after="org.knime.json.node.filehandling.writer.JSONWriterNodeFactory2" category-path="/struct-data/json" factory-class="org.knime.json.node.fromstring.StringToJSONNodeFactory"/>
      <node after="org.knime.json.node.fromstring.StringToJSONNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.fromtable.TableToJsonNodeFactory"/>
      <node after="org.knime.json.node.fromtable.TableToJsonNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.totable.JSONToTableNodeFactory"/>
      <node after="org.knime.json.node.totable.JSONToTableNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.tojson.ColumnsToJsonNodeFactory"/>
      <node after="org.knime.json.node.tojson.ColumnsToJsonNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.fromxml.XMLToJSONNodeFactory"/>
      <node after="org.knime.json.node.fromxml.XMLToJSONNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.toxml.JSONToXMLNodeFactory"/>
      <node after="org.knime.json.node.toxml.JSONToXMLNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.jsonpath.multi.JSONPathNodeFactory"/>
      <node after="org.knime.json.node.jsonpath.multi.JSONPathNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.jsonpath.dict.JSONPathDictNodeFactory"/>
      <node after="org.knime.json.node.jsonpath.dict.JSONPathDictNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.combine.column.ColumnCombineJsonNodeFactory"/>
      <node after="org.knime.json.node.combine.column.ColumnCombineJsonNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.combine.row.RowCombineJsonNodeFactory"/>
      <node after="org.knime.json.node.combine.row.RowCombineJsonNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.combine.row.CombineAndWriteJsonNodeFactory"/>
      <node deprecated="true" category-path="/struct-data/json" factory-class="org.knime.json.node.jsonpath.JSONPathNodeFactory"  after="org.knime.json.node.fromxml.XMLToJSONNodeFactory"/>-->
      <!--never released node category-path="/struct-data/json" factory-class="org.knime.json.node.jsonpointer.JSONPointerNodeFactory"  after="org.knime.json.node.jsonpath.JSONPathNodeFactory"/-->
      <node after="org.knime.json.node.combine.row.CombineAndWriteJsonNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.patch.apply.JSONPatchApplyNodeFactory"/>
      <node after="org.knime.json.node.patch.apply.JSONPatchApplyNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.schema.check.JSONSchemaCheckNodeFactory"/>
      <node after="org.knime.json.node.schema.check.JSONSchemaCheckNodeFactory" category-path="/struct-data/json" factory-class="org.knime.json.node.patch.create.JSONPatchCreateNodeFactory"/>
      <node category-path="/struct-data/json" factory-class="org.knime.json.node.input.JSONInputNodeFactory">
      </node>
      <node category-path="/struct-data/json" factory-class="org.knime.json.node.output.JSONOutputNodeFactory">
      </node>
      <node category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.input.table.ContainerTableInputNodeFactory">
      </node>
      <node category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.input.row.ContainerRowInputNodeFactory">
      </node>
      <node after="org.knime.json.node.container.input.table.ContainerTableInputNodeFactory" category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.input.variable2.ContainerVariableInputNodeFactory2">
      </node>
      <node deprecated="true" category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.input.variable.ContainerVariableInputNodeFactory">
      </node>
      <node after="org.knime.json.node.container.input.table.ContainerTableInputNodeFactory" category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.input.file.ContainerFileInputNodeFactory">
      </node>
      <node after="org.knime.json.node.container.input.variable2.ContainerVariableInputNodeFactory2" category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.output.table.ContainerTableOutputNodeFactory">
      </node>
      <node category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.input.credentials.ContainerCredentialsInputNodeFactory">
      </node>
   	  <node category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.output.row.ContainerRowOutputNodeFactory">
   	  </node>
      <node after="org.knime.json.node.container.output.row.ContainerRowOutputNodeFactory" category-path="/flowabstraction/container" factory-class="org.knime.json.node.container.output.file.ContainerFileOutputNodeFactory">
      </node>
      <node
            category-path="/flowabstraction/container"
            deprecated="false"
            factory-class="org.knime.json.node.container.input.raw.RawHTTPInputNodeFactory"
            hidden="false">
      </node>
      <node
            category-path="/flowabstraction/container"
            deprecated="false"
            factory-class="org.knime.json.node.container.output.raw.RawHTTPOutputNodeFactory"
            hidden="false">
      </node>
</extension>
   <extension point="org.knime.core.DataValueRenderer">
      <dataValue valueClass="org.knime.core.data.json.JSONValue">
         <renderer rendererFactoryClass="org.knime.core.data.json.JSONValueRenderer2$Factory" suggestAsDefault="true">
         </renderer>
      </dataValue>
   </extension>
   <extension point="org.knime.core.DataType">
      <DataType cellClass="org.knime.core.data.json.JSONCell" factoryClass="org.knime.core.data.json.JSONCellFactory">
         <serializer cellClass="org.knime.core.data.json.JSONCell" serializerClass="org.knime.core.data.json.JSONCell$JSONSerializer">
         </serializer>
         <serializer cellClass="org.knime.core.data.json.JSONBlobCell" serializerClass="org.knime.core.data.json.JSONBlobCell$JSONSerializer">
         </serializer>
         <serializer cellClass="org.knime.core.data.json.JSONFileStoreCell" serializerClass="org.knime.core.data.json.JSONFileStoreCell$JSONSerializer">
         </serializer>
         <ValueFactory
               valueFactoryClass="org.knime.core.data.json.JSONValueFactory">
         </ValueFactory>
      </DataType>
   </extension>
   <extension
         point="org.knime.core.DataCellToJavaConverter">
      <DataCellToJavaConverter
            factoryClass="org.knime.core.data.json.JsonValueToJavaConverterFactory">
      </DataCellToJavaConverter>
   </extension>
   <extension point="org.knime.python3.types.PythonValueFactory">
      <Module modulePath="src/python" moduleName="knime.types.json">
         <PythonValueFactory
            PythonClassName="JsonValueFactory"
            ValueFactory="org.knime.core.data.json.JSONValueFactory"
            ValueTypeName="builtins.dict">
         </PythonValueFactory>
      </Module>
   </extension>
   <extension
         point="org.knime.core.ui.dataValueViewProvider">
      <DataValueViewProvider
            dataValueViewProvider="org.knime.json.extensions.datavalueview.JSONCodeValueViewProvider">
      </DataValueViewProvider>
   </extension>
</plugin>
